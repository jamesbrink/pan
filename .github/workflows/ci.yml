name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      # Use GitHub's own cache action instead of the DeterminateSystems one
      - uses: actions/cache@v4
        name: Cache Nix store
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-
            
      - name: Configure Nix
        run: |
          mkdir -p ~/.config/nix
          echo 'extra-experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf
          echo 'allow-import-from-derivation = false' >> ~/.config/nix/nix.conf
          echo 'eval-cache = false' >> ~/.config/nix/nix.conf
          echo 'warn-dirty = false' >> ~/.config/nix/nix.conf
          echo 'accept-flake-config = true' >> ~/.config/nix/nix.conf
          # Disable binary cache to avoid HTTP 418 errors
          echo 'substitute = false' >> ~/.config/nix/nix.conf
          
      - name: Run linting
        # Handle the stderr redirection to /dev/null to filter out stdenv.tests warnings
        # while still allowing actual errors to fail the build
        run: |
          nix --log-format raw develop 2> >(grep -v "stdenv.tests" >&2) -c make lint || exit $?
        shell: bash

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      # Use GitHub's own cache action instead of the DeterminateSystems one
      - uses: actions/cache@v4
        name: Cache Nix store
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-
            
      - name: Configure Nix
        run: |
          mkdir -p ~/.config/nix
          echo 'extra-experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf
          echo 'allow-import-from-derivation = false' >> ~/.config/nix/nix.conf
          echo 'eval-cache = false' >> ~/.config/nix/nix.conf
          echo 'warn-dirty = false' >> ~/.config/nix/nix.conf
          echo 'accept-flake-config = true' >> ~/.config/nix/nix.conf
          # Disable binary cache to avoid HTTP 418 errors
          echo 'substitute = false' >> ~/.config/nix/nix.conf
          
      - name: Run type checking
        # Handle the stderr redirection to /dev/null to filter out stdenv.tests warnings
        # while still allowing actual errors to fail the build
        run: |
          nix --log-format raw develop 2> >(grep -v "stdenv.tests" >&2) -c make type || exit $?
        shell: bash

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      # Use GitHub's own cache action instead of the DeterminateSystems one  
      - uses: actions/cache@v4
        name: Cache Nix store
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-
            
      - name: Configure Nix
        run: |
          mkdir -p ~/.config/nix
          echo 'extra-experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf
          echo 'allow-import-from-derivation = false' >> ~/.config/nix/nix.conf
          echo 'eval-cache = false' >> ~/.config/nix/nix.conf
          echo 'warn-dirty = false' >> ~/.config/nix/nix.conf
          echo 'accept-flake-config = true' >> ~/.config/nix/nix.conf
          # Disable binary cache to avoid HTTP 418 errors
          echo 'substitute = false' >> ~/.config/nix/nix.conf
          
      - name: Run tests
        # Handle the stderr redirection to /dev/null to filter out stdenv.tests warnings
        # while still allowing actual errors to fail the build
        run: |
          nix --log-format raw develop 2> >(grep -v "stdenv.tests" >&2) -c make test || exit $?
        shell: bash